name: "Build and test"

on:
  pull_request:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    name: "Build and test"
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        ocaml-version: ['4.12', '4.14', '5.2']
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup OCaml ${{ matrix.ocaml-version }}
      uses: avsm/setup-ocaml@v3
      with:
        ocaml-compiler: ${{ matrix.ocaml-version }}

    - name: Restore OPAM cache
      id: opam-cache
      uses: actions/cache/restore@v4
      with:
        path: |
          ~/.opam
          ~/work/ppx_rapper/ppx_rapper/_opam
        key: opam-${{ matrix.operating-system }}-${{ matrix.ocaml-version }}-${{ hashFiles('*.opam') }}

    - name: opam pin packages
      run: |
        opam update
        opam pin add pg_query --dev-repo -y --no-action
        opam pin add ppx_rapper.dev . -y --no-action
        opam pin add ppx_rapper_lwt.dev . -y --no-action
        opam pin add ppx_rapper_async.dev . -y --no-action
        opam install ppx_rapper_async.dev ppx_rapper_lwt.dev -t

    - name: Install ppx_rapper_eio if OCaml version is 5.x
      if: startsWith(matrix.ocaml-version, '5')
      run: |
        opam pin add ppx_rapper_eio.dev . -y --no-action
        opam install ppx_rapper_eio -t

    - name: Save OPAM cache
      uses: actions/cache/save@v4
      if: steps.opam-cache.outputs.cache-hit != 'true'
      with:
        path: |
          ~/.opam
          ~/work/ppx_rapper/ppx_rapper/_opam
        key: opam-${{ matrix.operating-system }}-${{ matrix.ocaml-version }}-${{ hashFiles('*.opam') }}
